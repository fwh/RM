/* This file was generated by SableCC (http://www.sablecc.org/). */

package rm.analysis;

import java.util.*;
import rm.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADefProgram(ADefProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompProgram(ACompProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEndProgram(AEndProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADef(ADef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComp(AComp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParlstParlst(AParlstParlst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyParlst(AEmptyParlst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentPars(AIdentPars node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommaPars(ACommaPars node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComplexexprExpr(AComplexexprExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleexprExpr(ASimpleexprExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondisRelcomp(ACondisRelcomp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondRelcomp(ACondRelcomp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARelexpr(ARelexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermSmplexpr(ATermSmplexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddSmplexpr(AAddSmplexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFactorTerm(AFactorTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultTerm(AMultTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParFactor(AParFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntFactor(AIntFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealFactor(ARealFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentFactor(AIdentFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArgsArglst(AArgsArglst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyArglst(AEmptyArglst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprArgs(AExprArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListargsArgs(AListargsArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusAddop(APlusAddop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusAddop(AMinusAddop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultMulop(AMultMulop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntegerdivMulop(AIntegerdivMulop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntegermodMulop(AIntegermodMulop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealdivMulop(ARealdivMulop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALshiftMulop(ALshiftMulop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARshiftMulop(ARshiftMulop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALessthanRelop(ALessthanRelop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALessorequalRelop(ALessorequalRelop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEqualRelop(AEqualRelop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotequalRelop(ANotequalRelop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGreaterequalRelop(AGreaterequalRelop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGreaterRelop(AGreaterRelop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmpty(AEmpty node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlussym(TPlussym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinussym(TMinussym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTimessym(TTimessym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTImodsym(TImodsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRdivsym(TRdivsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdivsym(TIdivsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLesssym(TLesssym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLseqsym(TLseqsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNoteqsym(TNoteqsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGreqsym(TGreqsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGrtrsym(TGrtrsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLshiftsym(TLshiftsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRshiftsym(TRshiftsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCondis(TCondis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIfsym(TIfsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThensym(TThensym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElsesym(TElsesym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLetsym(TLetsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLparsym(TLparsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRparsym(TRparsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEndsym(TEndsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommasym(TCommasym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolonsym(TSemicolonsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEqualsym(TEqualsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAssignsym(TAssignsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTQuestionsym(TQuestionsym node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIntdenotation(TIntdenotation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRealdenotation(TRealdenotation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdent(TIdent node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
